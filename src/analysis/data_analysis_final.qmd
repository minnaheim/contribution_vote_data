---
title: "Data Analysis of Campaign Contributions and Voting Behavior"
format:
  html:
    toc: true
---

```{r setup, include=FALSE}
library(tidyverse)
library(ggplot2)
library(plm)
library(fastDummies)
library(Amelia)
library(lfe)
library(broom)
library(kableExtra)

source("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/src/analysis/analysis_prep_functions.R")
df <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df.csv")
df_no_change <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_no_change.csv")
df_long <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_long.csv")
df_vote_3 <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_vote_3.csv")
df_vote_4 <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_vote_4.csv")
df_vote_4_2 <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_vote_4_2.csv")
df_vote_51 <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_vote_51.csv")
df_vote_51_2 <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_vote_51_2.csv")
df_vote_52 <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_vote_52.csv")
df_vote_52_2 <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_vote_52_2.csv")
df_vote_6 <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_vote_6.csv")
df_vote_6_2 <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_vote_6_2.csv")
df_vote_7 <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_vote_7.csv")
df_vote_7_2 <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_vote_7_2.csv")
df_subsample <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/df_sub.csv")
state_makeup <- read.csv("/Users/minna/Desktop/HSG/Economics/BA_Thesis/code/data/analysis/state_makeup.csv")
```

# LPM of all Representatives

The reason for using a LPM for this analysis despite popular opinion in academa that the model is not always accurate (see Ch.5 in my paper), is that the LPM is ideal for binary outcomes, i.e. pro environmental or anti environmental vote.

<!-- recheck whether seniority ist aussagekrÃ¤ftig..? -->

## with control variables 

This is the most basic model, which includes all representatives (who can be associated with the R or D party, not I or Libertarian) in panel and who participated in at least 2 votes (to be able to track changes in voting behaviour). This means the dataset encompasses 574 (?) Representatives.

```{r}
# remove ID type columns
df_long <- df_long %>% select(-c(GovtrackID, opensecrets_id, first_name, last_name, name))
view(df_long)
full_ols <- lm(Vote ~ . - state - BioID - Vote_change_dummy, data = df_long)
summary(full_ols)
```

The ols regresses the pro and anti environmental contributions with the control variables used: 

- party
- district
- birthday
- state (alt. to Geographical)
- Seniority (number of terms served prior to vote)
- DW-Nominate Scores from the 1st and second dimensions
- Geographical region (i.e. States categorised into regions (South, West, North-East and Midwest))
- majority party in the house at the time of the vote.

### with log transformed contributions
```{r}
cols <- c("Contribution_plus", "Contribution_minus")
df_long[cols] <- lapply(df_long[cols], function(x) log(x + 1))

full_ols_log <- lm(Vote ~ . - state - BioID - Vote_change_dummy, data = df_long)
summary(full_ols_log)
``` 

transforming the contribution variables logarithmically does not change the adjusted R-squared of the model by much. It also decreases the significance of the coefficients. 

The reason for transforming the contribution variables is to account for differences in contributions which representatives might receive, i.e. AOC vs. Kevin McCarthy. 

#### checking differences in party
```{r}
df_long_D <- df_long %>%
    filter(party == "D") %>%
    select(-c(state, party, BioID, Vote_change_dummy))

full_ols_D <- lm(Vote ~ ., data = df_long_D)
summary(full_ols_D)

df_long_R <- df_long %>%
    filter(party == "R") %>%
    select(-c(state, party, BioID, Vote_change_dummy))

full_ols_R <- lm(Vote ~ ., data = df_long_R)
summary(full_ols_R)
```

Not much difference in the coefficients between the two parties.
Why NA in anti_env_dummy ? because all received contributions? lets see...
```{r}
table(df_long_R$anti_env_dummy)
```

Since only 96 instances of non-anti environmental contributions exist, this means that only 96/6 = 16 representatives never received contributions from anti environmental groups. hence why there are probably NAs for this variable.

## with state & year fixed effects 

### once with geographical 
```{r}
ols_geo <- lm(Vote ~ district + party + birthday + nominate_dim1 + nominate_dim2 + as.factor(Geographical) + as.factor(Instance) + seniority + Contribution_minus + Contribution_plus + gender + pro_env_dummy + anti_env_dummy, data = df_long)
summary(ols_geo)
```

Explain the following in the paper:

- why bill fixed effects (environmental occurances/perception may influence voting)
- why state fixed effects (D-CA != D-TX or so. avg. rep from states different)

for ols_geo_1 since I are being stricter than in the model before, since I am using fixed effects for the geographical region and the (year). This means that the model is more robust, but also more specific.

### once with state
```{r}
ols_state_fe <- lm(Vote ~ district + party + birthday + nominate_dim1 + nominate_dim2 + as.factor(state) + as.factor(Instance) + seniority + Contribution_minus + Contribution_plus + gender + pro_env_dummy + anti_env_dummy, data = df_long)
summary(ols_state_fe)
```

using state instead of geographical region means that we can more accurately determine the differences in voting behavior between representatives from different states, not just regions. this makes sense, when we look at the states which are significant in the model, i.e. NY, SC, NJ, NH, FL, CT, AZ, they are not all from the same region, manye from the north east and the south and west, but no real patterns...

```{r}
kable(head(state_makeup), format = "html")
# mean(state_makeup$Number)
# boxplot(state_makeup$Number)
```

Discuss... maybe makeup of states also important for the coefficient. If you have only

The average amount of representatives for each state is 8.7 , with the highest number of representatives from California (52) and the lowest from Wyoming, Vermont, Alaska, etc. (1).

here, the model is getting stricter than before, since I am not only fixing for state and year (instance) but also for party, also i cannot include the dummy variables for anti and pro environmental contributions

## with individual & year fixed effects
```{r}
ols_ind_fe <- lm(Vote ~ district + party + birthday + nominate_dim1 + nominate_dim2 + Instance + as.factor(BioID) + seniority + Contribution_minus + Contribution_plus + Dmajority, data = df_long)
summary(ols_ind_fe)
```

The difference between the ols before and this ols is the individual fixed effects instead of state effects. so we are fixing for individiuals so we dont include person specific changes in the analysis and for the same person can see how their voting changes. 

this is very useful since this way we account for changes that previously we could not account for, since they are either immesurable or just endogenous in this analysis that change the amount of contributions representatives receive, such as:

- difference in eloquence between representatives
- difference in connections to special interest groups
- difference in the amount of time spent on the campaign trail
- difference in the amount of time spent in office
- professional history with contributions (i.e. previous profession, previous income, etc. before history in office)
- high explanation of the model (multiple R^2 = 0.96) 

Downsides of this model are however that the model is incredibly strict, so:

- cannot include 2 FEs that are strict, i.e. state (50 states) and individuals (about 570 individuals)
- cannot include time fixed effects, since the model is already too strict
- not much significance

Interpretation: 

We are fixing for individuals to determine whether changes in contributions can be associated with changes in voting behavior for each representative. Only few representatives are significant, i.e. 
V000133, S000051, P00025, G000578... out of these 4 representatives with significant coefficients, two changed their voting behavior once. 

- Marshall (Mark) Sanfordfrom anti -> pro environment (which means that when you hold constant for this reperesentative, then a change in from anti to pro env means 0.49 units more likely to change their vote?)
-  Mark Gaetz from anti to pro envrionmental vote. (for Gaetz, this is 0.2880450 units more likely to change their vote from anti to pro environmental vote)

# LPM per Vote

This LPM is more specific since it only includes the each seperate vote, but all contributions of the votes leading up to it. E.g. In ols_4_2 I include not only the vote 4, but also the contributions of the vote 3 which is on the same topic. this way it is easier to analyse whether the contributions from the previous relevant votes have an effect on the voting behavior of the representatives. -> **remove recency bias** attached to the 6mo prior vote

Does this change the coefficients? Since in the previous model we were fixing for instances, this shouldnt change anything, we could not see how the coefficients change over time.
Why use this format - if we could fix year in model before ?

We do this because we want to see how prior contributions in similar votes could affect the voting.
### vote and all contributions leading up to the vote with state FEs

can fix for states here, but not for instances, since this is already just that, and not for year and individuals, since these are all the same too.

```{r}
# Vote 4_2
view(df_vote_4_2)
ols_4_2 <- plm(Vote4_minus ~ Contribution_3_minus + Contribution_3_plus + Contribution_4_minus + Contribution_4_plus + seniority_114 + nominate_dim1 + nominate_dim2 + gender + pro_env_dummy + anti_env_dummy, data = df_vote_4_2, index = c("state", "party"), model = "within")
summary(ols_4_2)

# Vote 51_2
ols_51_2 <- plm(Vote51_minus ~ Contribution_3_minus + Contribution_3_plus + Contribution_4_minus + Contribution_4_plus + Contribution_51_minus + Contribution_51_plus + seniority_1151 + party + nominate_dim1 + nominate_dim2 + gender + pro_env_dummy + anti_env_dummy, data = df_vote_51_2, index = c("state"), model = "within")
summary(ols_51_2)

# Vote 52_2
ols_52_2 <- plm(Vote52_minus ~ Contribution_3_minus + Contribution_3_plus + Contribution_4_minus + Contribution_4_plus + Contribution_51_minus + Contribution_51_plus + Contribution_52_minus + Contribution_52_plus + seniority_1152 + party + nominate_dim1 + nominate_dim2 + gender + pro_env_dummy + anti_env_dummy, data = df_vote_52_2, index = c("state"), model = "within")
summary(ols_52_2)

# Vote 6_2
ols_6_2 <- plm(Vote6_minus ~ Contribution_3_minus + Contribution_3_plus + Contribution_4_minus + Contribution_4_plus + Contribution_51_minus + Contribution_51_plus + Contribution_52_minus + Contribution_52_plus + Contribution_6_minus + Contribution_6_plus + seniority_116 + party + nominate_dim1 + nominate_dim2 + gender + pro_env_dummy + anti_env_dummy, data = df_vote_6_2, index = c("state"), model = "within")
summary(ols_6_2)

# Vote 7_2
view(df_vote_7_2)
ols_7_2 <- plm(Vote7_minus ~ Contribution_3_minus + Contribution_3_plus + Contribution_4_minus + Contribution_4_plus + Contribution_51_minus + Contribution_51_plus + Contribution_52_minus + Contribution_52_plus + Contribution_6_minus + Contribution_6_plus + Contribution_7_minus + Contribution_7_plus + seniority_117 + party + gender + pro_env_dummy + anti_env_dummy + nominate_dim1 + nominate_dim2, data = df_vote_7_2, index = c("state"), model = "within")
summary(ols_7_2)
```

Why dont the anti_env_dummy coefficients show up? Are they singularities?

# LPM with consistent Representatives 
## with control variables
```{r}
df_long_no_change <- df_long %>%
    filter(Vote_change_dummy == 0) %>%
    select(-c(Vote_change_dummy, Vote_change))

ols_no_change <- lm(Vote ~ . - state - BioID, data = df_long_no_change)
summary(ols_no_change)
```

## with state & year FE
```{r}
ols_no_change_2 <- lm(Vote ~ as.factor(Geographical) + as.factor(Instance) + district + party + birthday + nominate_dim1 + nominate_dim2 + seniority + Contribution_minus + Contribution_plus + gender + pro_env_dummy + anti_env_dummy, data = df_long_no_change)
summary(ols_no_change_2)
```

Here, using geographical regions instead of state fixed effects creates more significant results. Also, need to remove Majority because too specific?

## with individual FEs
```{r}
ols_no_change_3 <- lm(Vote ~ district + party + birthday + nominate_dim1 + nominate_dim2 + Instance + as.factor(BioID) + seniority + Contribution_minus + Contribution_plus + Dmajority, data = df_long_no_change)
summary(ols_no_change_3)
```

For this, since fixing individuals is so specific, we need to remove the anti and pro env. dummy, since they are already included in the individual fixed effects. (if a rep receives contribution once, this is automatically 1, i.e. never changes for an individual).

# LPM with vote changing Representatives
## with control variables

Using the same model as above with the same specifications (control varaibels, then generous FE (state, year), then strict FE (individuals)) but using only those representatives that changed their voting behavior over time.

```{r}
df_long_change <- df_long %>%
    filter(Vote_change_dummy == 1) %>%
    select(-c(Vote_change_dummy, Vote_change))
view(df_long_change)

ols_change <- lm(Vote ~ . - state - BioID - anti_env_dummy, data = df_long_change)
summary(ols_change)
```

Compared to before we see multiple things, on the one hand the Adjusted R^2 is lower than in the other models where it averages to about 0.91, here only 0.25. This is because the model is more specific, i.e. only includes those representatives who changed their voting behavior, which are only 23 in total our ot 574 (?), whereas there are 31 changes in votes to be seen in total.

So, we need to take all these results with caution, since 23 out of 547 (?) is not an incredibly small sample size, and thus makes the model less robust.

Here, we need to remove the anti_env_dummy because of singularities, because all have received anti_env contributions, so the coefficient is not defined.

## with geography & year FEs
```{r}
ols_change_fe <- lm(Vote ~ as.factor(Geographical) + as.factor(Instance) + district + party + birthday + nominate_dim1 + nominate_dim2 + seniority + Contribution_minus + Contribution_plus + gender + pro_env_dummy + Dmajority + district, data = df_long_change)
summary(ols_change_fe)
```


### checking differences in party

```{r}
view(df_long_change)
# df_long_change_D <- df_long_change %>%
#     filter(party == "D") %>%
#     select(-c(state, party, BioID, opensecrets_id, first_name, last_name, name, district, Vote_change_dummy, Vote_change))

# df_long_change_R <- df_long_change %>%
#     filter(party == "R") %>%
#     select(-c(state, party, BioID,  opensecrets_id, first_name, last_name, name, district, Vote_change_dummy, Vote_change))

# view(df_long_change_D)
view(df_long_change)
ols_change_D <- lm(Vote ~ . - state - party - BioID - opensecrets_id - first_name - last_name - name - district - Vote_change_dummy - Vote_change, data = df_long_change)
# summary(ols_change_D)
# ols_change_R <- lm(Vote ~ ., data = df_long_change_R)
# summary(ols_change_R)

```

Already here we can see that the coefficients are less significant on average with only instance being significant, with 0.01 units more likely to change their vote from anti to pro environmental vote, further during the years. Moreover, we see that for a change in vote from anti-environmental to pro-environmental 

## with individual & year FEs
```{r}
ols_change_ind_fe <- lm(Vote ~ as.factor(BioID) + as.factor(Instance) + Contribution_minus + Contribution_plus, data = df_long_change)
summary(ols_change_ind_fe)

```

To make this work, we have to remove the control variables from before, i.e. party, district, Geographical and state, gender, nominate_dim1&2,  and pro- and anti_env_dummy and birthday since these are already included in the individual fixed effects, i.e. these dont chance over time in an individual. Also, seniority and Dmajority are just NAs since this sample size is too small.


What is interesting to see here, is the fact that instances are highly significant. Meaning that for a change in vote, the instance of change is most likely with 0.74 units for vote7 and then 0.72 units for vote 6, and then 53. This is interesting since it shows that the instance of change is more likely to happen in the later votes.

<!-- This is a simple linear probability model with unit and time fixed effects. The model only includes representatives who did not change their opinions (across all votes) during the time period. this way a positive vote can be regressed with contributions and the control variables. 
We remo (too specific...), seniority (NA values, multicolinear?), Majority (NA values)
```{r}
# include time fixed effects ? can we do that here?
# view(df_no_change)
df_no_change <- df_no_change %>% select(-c(state, seniority_114, seniority_1151, seniority_116, seniority_117))
# view(df_no_change)

# all Votes
no_change_ols_minus <- lm(all_votes_minus ~ . - all_votes_plus, data = df_no_change)
summary(no_change_ols_minus)

no_change_ols_plus <- lm(all_votes_plus ~ . - all_votes_minus, data = df_no_change)
summary(no_change_ols_plus)
```

```{r}
# try the same regression as above with a log transformation of all contributions
cols <- c("Contribution_3_plus", "Contribution_3_minus", "Contribution_4_plus", "Contribution_4_minus", "Contribution_51_plus", "Contribution_51_minus", "Contribution_52_plus", "Contribution_52_minus", "Contribution_6_plus", "Contribution_6_minus", "Contribution_7_plus", "Contribution_7_minus")
df_no_change[cols] <- lapply(df_no_change[cols], function(x) log(x + 1))

# all Votes log transformed
no_change_ols_minus_log <- lm(all_votes_minus ~ . - all_votes_plus, data = df_no_change)
summary(no_change_ols_minus_log)

```

When applying a log transformation to the ols above, the adjusted R squared decreases.

When grouping contributions into positive and negative, we get one coefficient not defined because of singularities, i.e. too strong of a correlation between two variables. 

# Linear Probability Model with (time and individual) Fixed Effects

# sessionized Linear Probability Model without Fixed Effects
## time specific contributions 
### contribution and corresponding vote
```{r}
# Vote 3
# view(df_vote_3)
ols_3 <- lm(Vote3_minus ~ . - state - BioID - Vote3_plus - Vote3 - Vote_change_dummy, data = df_vote_3)
summary(ols_3)

# Vote 4
ols_4 <- lm(Vote4_minus ~ . - state - BioID - Vote4_plus - Vote4 - Vote_change_dummy, data = df_vote_4)
summary(ols_4)

# Vote 51
ols_51 <- lm(Vote51_minus ~ . - state - BioID - Vote51_plus - Vote51 - Vote_change_dummy, data = df_vote_51)
summary(ols_51)

ols_52 <- lm(Vote52_minus ~ . - state - BioID - Vote52_plus - Vote52 - Vote_change_dummy, data = df_vote_52)
summary(ols_52)

ols_6 <- lm(Vote6_minus ~ . - state - BioID - Vote6_plus - Vote6 - Vote_change_dummy, data = df_vote_6)
summary(ols_6)

ols_7 <- lm(Vote7_minus ~ . - state - BioID - Vote7_plus - Vote7 - Vote_change_dummy, data = df_vote_7)
summary(ols_7)
```


## Subsample Analysis (of only vote changers)
here I only look at those who did change their voting behavior. For this I created a seperate df out of the original df, where i only included representatives who changed their minds. I marked the changes, where from pro-environment vote "+" to anti-environment "-" = 0, and from anti-environment to pro-environment = 1. 


```{r}
kable(df_subsample, format = "html")

# df_subsample_1 <- df_subsample %>% select(party, vote_change_to_anti, year, Contribution_3_minus, Contribution_3_plus, Contribution_4_minus, Contribution_4_plus, Contribution_51_minus, Contribution_51_plus, Contribution_52_minus, Contribution_52_plus, Contribution_6_minus, Contribution_6_plus, Contribution_7_minus, Contribution_7_plus)
# # view(df_subsample_1)

# # Vote Changes including contributions
# ols_subsample <- lm(vote_change_to_anti ~ ., data = df_subsample_1)
# summary(ols_subsample)
```

NAs for all above Contributions > 51...

```{r}
# modified df_subsample
# view(df_subsample_2)
# df_subsample <- df_subsample %>% filter(!is.na(Vote6))
# df_subsample_2 <- df_subsample %>% select(party, vote_change_to_anti, year, Contribution_3_minus, Contribution_3_plus, Contribution_4_minus, Contribution_4_plus, Contribution_51_minus, Contribution_51_plus, Contribution_52_minus, Contribution_52_plus, Contribution_6_minus, Contribution_6_plus, Contribution_7_minus, Contribution_7_plus, nominate_dim1, nominate_dim2, birthday, seniority_113, first_contribution_minus, first_contribution_plus)
# view(df_subsample_2)

# # Vote Changes including contributions only for those who are present for vote 6,7
# ols_subsample_2 <- lm(vote_change_to_anti ~ ., data = df_subsample_2)
# summary(ols_subsample)

```

even when removing the NAs, cannot predict the coefficients, since 11/23 representatives have NA values, vs. in the beginning, i.e. vote 3, only 6/23 representatives have NA values since they weren't present for the vote. Makes a big difference in estimation. 


### Subsample analysis with state and time fixed effects
```{r}
# remove cols not necessary for analysis
df_subsample <- df_subsample %>% select(-c(
    last_name, first_name, name, district, Vote_count, Vote_change,
    first_contribution_minus, first_contribution_plus, Vote_change, Vote_change_dummy, GovtrackID, Vote3, Vote4, Vote51, Vote52, Vote6, Vote7, seniority_113, seniority_114, seniority_1151, seniority_116, seniority_117, vote_change_to_pro, vote_change_type, opensecrets_id, vote_change_year, gender, BioID
))
# view(df_subsample)

# fixed <- plm(vote_change_to_anti ~ ., data = df_subsample, index = c("Geographical", "year"), model = "within") # fixed model
# summary(fixed)
```

12 coefficients dropped because of singularities...

# Two way fixed effects model
```{r}
view(df_no_change)
two_way_model <- felm(all_votes_minus ~ Geographical + Contribution_3_minus + Contribution_3_plus | Geographical | 0 | 0, data = df_no_change)
summary(two_way_model)

```

# Logit and Probit Models 
## all representatives who did not change their opinion
```{r}
missmap(df_no_change, main = "Missing values vs observed")
# all_votes_minus ~ . - all_votes_plus, data = df_no_change)

logit <- glm(all_votes_minus ~ . - all_votes_plus, family = binomial(link = "logit"), data = df_no_change)
summary(logit)

probit <- glm(all_votes_minus ~ . - all_votes_plus, family = binomial(link = "probit"), data = df_no_change)
summary(probit)

```

Here Probit better than Logit, Akaike lower, so Probit is more parsimonious.

Sessionized Models:
```{r, include = FALSE}
# # Vote 3 Logit
# ols_3 <- glm(Vote3_minus ~ . - state - BioID - Vote3_plus - Vote3 - Vote_change_dummy, family = binomial(link = "logit"), data = df_vote_3)
# summary(ols_3)

# # Vote 3 Probit
# ols_3 <- glm(Vote3_minus ~ . - state - BioID - Vote3_plus - Vote3 - Vote_change_dummy, family = binomial(link = "probit"), data = df_vote_3)
# summary(ols_3)

# # Vote 7 Logit
# ols_7 <- glm(Vote7_minus ~ . - state - BioID - Vote7_plus - Vote7 - Vote_change_dummy, family = binomial(link = "logit"), data = df_vote_7)
# summary(ols_7)

# # Vote 7 Probit
# ols_7 <- glm(Vote7_minus ~ . - state - BioID - Vote7_plus - Vote7 - Vote_change_dummy, family = binomial(link = "probit"), data = df_vote_7)
# summary(ols_7)

# # Vote 7_2 Logit
# ols_7_2 <- glm(Vote7_minus ~ . - state - BioID - Vote7_plus - Vote7 - Vote_change_dummy - Vote7_NA, family = binomial(link = "logit"), data = df_vote_7_2)
# summary(ols_7_2)

# # Vote 7_2 Probit
# ols_7_2 <- glm(Vote7_minus ~ . - state - BioID - Vote7_plus - Vote7 - Vote_change_dummy - Vote7_NA, family = binomial(link = "probit"), data = df_vote_7_2)
# summary(ols_7_2)
```

Sessionizing not useful, as the p values are super high. -->
